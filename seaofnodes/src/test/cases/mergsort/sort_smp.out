START:                            [[   ]]
  10 Start   ____ ____ ____       [[    13   61   64   86   58    9  190  121   70   93  ]]  [  Ctrl, #TOP, int]

L9:                               [[  START      ]]
   9 main    ____   10            [[    12  212  325  324  323  322  321  320  319  318  317  316  315  314  313  312  311  310  309  308  416  408   23  355  358   34  359   33  360   32  361   31  362   30  363   29  364   28  365   27  366   26  357   21  367   25  407   20  411   18  406   16  371   48   47   46   45   44   43   42   41   40   14   39   11  368  370  410    8  ]]  Ctrl
  12 $mem       9   13            [[    11   23   23  ]]  #BOT
 212 $rpc       9   86            [[     2       ]]  $[ALL]
 358 mov        9  355            [[    34       ]]
  34 st8        9   35  358 ____ ____  [[    33  ]]  #3:int
 359 mov        9  355            [[    33       ]]
  33 st8        9   34  359 ____ ____  [[    32  ]]  #3:int
 360 mov        9  355            [[    32       ]]
  32 st8        9   33  360 ____ ____  [[    31  ]]  #3:int
 361 mov        9  355            [[    31       ]]
  48 st8        9   49  371 ____ ____  [[    47  ]]  #3:int
  31 st8        9   32  361 ____ ____  [[    30  ]]  #3:int
 362 mov        9  355            [[    30       ]]
  47 st8        9   48  371 ____ ____  [[    46  ]]  #3:int
  30 st8        9   31  362 ____ ____  [[    29  ]]  #3:int
  46 st8        9   47  371 ____ ____  [[    45  ]]  #3:int
 363 mov        9  355            [[    29       ]]
  45 st8        9   46  371 ____ ____  [[    44  ]]  #3:int
  29 st8        9   30  363 ____ ____  [[    28  ]]  #3:int
 364 mov        9  355            [[    28       ]]
  44 st8        9   45  371 ____ ____  [[    43  ]]  #3:int
  28 st8        9   29  364 ____ ____  [[    27  ]]  #3:int
 365 mov        9  355            [[    27       ]]
  43 st8        9   44  371 ____ ____  [[    42  ]]  #3:int
  27 st8        9   28  365 ____ ____  [[    26  ]]  #3:int
 366 mov        9  355            [[    26       ]]
  42 st8        9   43  371 ____ ____  [[    41  ]]  #3:int
 367 mov        9  355            [[    25       ]]
 357 mov        9  355            [[    21       ]]
  26 st8        9   27  366 ____ ____  [[    25  ]]  #3:int
  41 st8        9   42  371 ____ ____  [[    40  ]]  #3:int
  25 st8        9   26  367 ____ ____  [[    20  ]]  #3:int
 407 #88        9                 [[    20       ]]  88
  21 st4        9   22  357 ____ ____  [[    20  ]]  #2:u32
  40 st8        9   41  371 ____ ____  [[    39  ]]  #3:int
  20 new_ary    9  407   21   25  [[    19   36   37  ]]  [  Ctrl, *![int], #2:u32, #3:int]
  19 $2        20                 [[    18       ]]  #2:u32
  36 [int]     20                 [[   411   18  ]]  *[int]
  37 $3        20                 [[    16       ]]  #3:int
 408 #88        9                 [[    23       ]]  88
  39 st8        9   40  371 ____ ____  [[    11  ]]  #3:int
  18 st4        9   19   36 ____ ____  [[    16  ]]  #2:u32
 411 mov        9   36            [[   370       ]]
 406 #88        9                 [[    16       ]]  88
  14 st4        9   15  371 ____ ____  [[    11  ]]  #2:u32
 410 #10        9                 [[     8       ]]  10
  16 new_ary    9  406   18   37  [[    15   38   49  ]]  [  Ctrl, *![int], #2:u32, #3:int]
  15 $2        16                 [[    14       ]]  #2:u32
  38 [int]     16                 [[   371       ]]  *[int]
  49 $3        16                 [[    48       ]]  #3:int
  11 ALLMEM     9   12   14   39  [[     8       ]]  #BOT
 368 mov        9  355            [[     8       ]]
 370 mov        9  411            [[     8       ]]
  23 new_ary    9  408   12   12  [[    22   24   35  ]]  [  Ctrl, *![int], #2:u32, #3:int]
  22 $2        23                 [[    21       ]]  #2:u32
  24 [int]     23                 [[   355       ]]  *[int]
  35 $3        23                 [[    34       ]]  #3:int
   8 call       9   11  368  370  410  [[     7  ]]  Ctrl
 371 mov        9   38            [[   372   39   40   41   42   43   44   45   46   47   48   14  ]]
 355 mov        9   24            [[   356  368  367  366  365  364  363  362  361  360  359  358  357  ]]
 308 rbx        9                 [[   416       ]]
 416 mov        9  308            [[   417       ]]
 310 rsi        9                 [[     2       ]]
 311 rdi        9                 [[     2       ]]
 312 r12        9                 [[     2       ]]
 313 r13        9                 [[     2       ]]
 314 r14        9                 [[     2       ]]
 315 r15        9                 [[     2       ]]
 316 xmm6       9                 [[     2       ]]
 317 xmm7       9                 [[     2       ]]
 318 xmm8       9                 [[     2       ]]
 319 xmm9       9                 [[     2       ]]
 320 xmm10      9                 [[     2       ]]
 321 xmm11      9                 [[     2       ]]
 322 xmm12      9                 [[     2       ]]
 323 xmm13      9                 [[     2       ]]
 324 xmm14      9                 [[     2       ]]
 325 xmm15      9                 [[     2       ]]
 309 rbp        9                 [[     2       ]]

L70:                              [[  START      ]]
  70 copy_ar ____   10            [[    75   77   79   82   84   85  289  288  287  286  285  284  283  282  281  280  279  278  277  276  275  274  273  272   69  ]]  Ctrl
  75 begin     70   64            [[    74       ]]  int
  77 end       70   64            [[    72       ]]  int
  79 $mem      70   13            [[    78   80  ]]  #BOT
  82 b         70   61            [[    81       ]]  *[int]
  84 a         70   61            [[    83       ]]  *[int]
  85 $rpc      70   86            [[    66       ]]  $[ALL]
 272 rbx       70                 [[    66       ]]
 278 r14       70                 [[    66       ]]
 279 r15       70                 [[    66       ]]
 280 xmm6      70                 [[    66       ]]
 281 xmm7      70                 [[    66       ]]
 282 xmm8      70                 [[    66       ]]
 283 xmm9      70                 [[    66       ]]
 284 xmm10     70                 [[    66       ]]
 285 xmm11     70                 [[    66       ]]
 286 xmm12     70                 [[    66       ]]
 287 xmm13     70                 [[    66       ]]
 288 xmm14     70                 [[    66       ]]
 289 xmm15     70                 [[    66       ]]
 277 r13       70                 [[    66       ]]
 276 r12       70                 [[    66       ]]
 275 rdi       70                 [[    66       ]]
 274 rsi       70                 [[    66       ]]
 273 rbp       70                 [[    66       ]]

L121:                             [[  START      ]]
 121 merge   ____   10            [[   138  141  144  151  154  158  173  235  234  233  232  231  230  229  228  227  226  225  224  223  222  221  220  219  218  413  326  376  381  120  ]]  Ctrl
 138 begin    121   64            [[   376  155  ]]  int
 141 middle   121   64            [[   135  381  ]]  int
 144 end      121   64            [[   142  170  ]]  int
 151 $mem     121   13            [[   150  172  ]]  #BOT
 154 b        121   61            [[   153  159  ]]  *[int]
 158 a        121   61            [[   326       ]]  *[int]
 173 $rpc     121   86            [[   117       ]]  $[ALL]
 381 mov      121  141            [[   145       ]]
 376 mov      121  138            [[   137       ]]
 326 mov      121  158            [[   327  148  161  157  ]]
 218 rbx      121                 [[   413       ]]
 413 mov      121  218            [[   414       ]]
 221 rdi      121                 [[   117       ]]
 226 xmm6     121                 [[   117       ]]
 227 xmm7     121                 [[   117       ]]
 228 xmm8     121                 [[   117       ]]
 229 xmm9     121                 [[   117       ]]
 230 xmm10    121                 [[   117       ]]
 231 xmm11    121                 [[   117       ]]
 232 xmm12    121                 [[   117       ]]
 233 xmm13    121                 [[   117       ]]
 234 xmm14    121                 [[   117       ]]
 235 xmm15    121                 [[   117       ]]
 220 rsi      121                 [[   117       ]]
 219 rbp      121                 [[   117       ]]
 224 r14      121                 [[   117       ]]
 225 r15      121                 [[   117       ]]
 223 r13      121                 [[   117       ]]
 222 r12      121                 [[   117       ]]

L190:                             [[  START      ]]
 190 eq      ____   10            [[   196  197  201  204  208  271  270  269  268  267  266  265  264  263  262  261  260  259  258  257  256  255  254  398  189  ]]  Ctrl
 196 $mem     190   13            [[   194  200  206  206  ]]  #BOT
 197 a        190   61            [[   194       ]]  *[int]
 201 b        190   61            [[   200       ]]  *[int]
 204 n        190   64            [[   202       ]]  int
 208 $rpc     190   86            [[   185       ]]  $[ALL]
 398 #0       190                 [[   198       ]]  0
 258 r12      190                 [[   185       ]]
 259 r13      190                 [[   185       ]]
 260 r14      190                 [[   185       ]]
 261 r15      190                 [[   185       ]]
 262 xmm6     190                 [[   185       ]]
 263 xmm7     190                 [[   185       ]]
 264 xmm8     190                 [[   185       ]]
 265 xmm9     190                 [[   185       ]]
 266 xmm10    190                 [[   185       ]]
 267 xmm11    190                 [[   185       ]]
 268 xmm12    190                 [[   185       ]]
 269 xmm13    190                 [[   185       ]]
 270 xmm14    190                 [[   185       ]]
 271 xmm15    190                 [[   185       ]]
 257 rdi      190                 [[   185       ]]
 256 rsi      190                 [[   185       ]]
 255 rbp      190                 [[   185       ]]
 254 rbx      190                 [[   185       ]]

L58:                              [[  START      ]]
  58 merge_s ____   10            [[    59   60   63   65  182  307  306  305  304  303  302  301  300  299  298  297  296  295  294  293  292  291  290  403  400  349  351  353  402  405   57  ]]  Ctrl
  59 $mem      58   13            [[    57       ]]  #BOT
  60 a         58   61            [[   400       ]]  *[int]
  63 n         58   64            [[   403       ]]  int
  65 b         58   61            [[   349       ]]  *[int]
 182 $rpc      58   86            [[    51       ]]  $[ALL]
 405 mov       58  403            [[    57       ]]
 402 mov       58  400            [[    57       ]]
 353 #0        58                 [[    57       ]]  0
 351 mov       58  349            [[    57       ]]
  57 call      58   59  402  353  405  351  [[    56  ]]  Ctrl
 349 mov       58   65            [[   350  351  ]]
 400 mov       58   60            [[   401  402  ]]
 403 mov       58   63            [[   404  405  ]]
 291 rbp       58                 [[    51       ]]
 295 r13       58                 [[    51       ]]
 296 r14       58                 [[    51       ]]
 297 r15       58                 [[    51       ]]
 298 xmm6      58                 [[    51       ]]
 299 xmm7      58                 [[    51       ]]
 300 xmm8      58                 [[    51       ]]
 301 xmm9      58                 [[    51       ]]
 302 xmm10     58                 [[    51       ]]
 303 xmm11     58                 [[    51       ]]
 304 xmm12     58                 [[    51       ]]
 305 xmm13     58                 [[    51       ]]
 306 xmm14     58                 [[    51       ]]
 307 xmm15     58                 [[    51       ]]
 290 rbx       58                 [[    51       ]]
 294 r12       58                 [[    51       ]]
 293 rdi       58                 [[    51       ]]
 292 rsi       58                 [[    51       ]]

L93:                              [[  START      ]]
  93 split_m ____   10            [[    99  101  102  103  106  177  253  252  251  250  249  248  247  246  245  244  243  242  241  240  239  238  237  236  391  336  332  328  342  395  110  108   92  ]]  Ctrl
  99 $mem      93   13            [[    97  175  ]]  #BOT
 101 a         93   61            [[   328       ]]  *[int]
 102 b         93   61            [[   332       ]]  *[int]
 103 begin     93   64            [[   391       ]]  int
 106 end       93   64            [[   336       ]]  int
 177 $rpc      93   86            [[    89       ]]  $[ALL]
 395 mov       93  391            [[   110       ]]
 332 mov       93  102            [[   335  333  334  ]]
 336 mov       93  106            [[   342  340  337  339  ]]
 391 mov       93  103            [[   395  392  394  393  ]]
 342 mov       93  336            [[   110       ]]
 328 mov       93  101            [[   329  331  330  ]]
 110 sub       93  342  395       [[   108       ]]  int
 108 cmp       93  110            [[    92       ]]  bool
  92 j<=       93  108            [[    91   98  ]]  [  Ctrl, Ctrl]
 241 r13       93                 [[    89       ]]
 242 r14       93                 [[    89       ]]
 243 r15       93                 [[    89       ]]
 244 xmm6      93                 [[    89       ]]
 245 xmm7      93                 [[    89       ]]
 246 xmm8      93                 [[    89       ]]
 247 xmm9      93                 [[    89       ]]
 248 xmm10     93                 [[    89       ]]
 249 xmm11     93                 [[    89       ]]
 250 xmm12     93                 [[    89       ]]
 251 xmm13     93                 [[    89       ]]
 252 xmm14     93                 [[    89       ]]
 253 xmm15     93                 [[    89       ]]
 238 rsi       93                 [[    89       ]]
 237 rbp       93                 [[    89       ]]
 236 rbx       93                 [[    89       ]]
 239 rdi       93                 [[    89       ]]
 240 r12       93                 [[    89       ]]

LOOP120:                          [[  L121      L122       ]]
 120 Loop    ____  121  420       [[   137  145  150  155  170  119  ]]  Ctrl
 137 Phi_i    120  376  139       [[   148  135  140  139  157  ]]  int
 145 Phi_j    120  381  146       [[   162  142  146  147  161  ]]  int
 150 Phi_$3   120  151  152       [[   148  153  157  159  161  162  172  ]]  #BOT
 155 Phi_k    120  138  156       [[   170  153  156  159  ]]  int
 170 cmp      120  155  144       [[   119       ]]  bool
 119 j>=      120  170            [[   118  134  ]]  [  Ctrl, Ctrl]

LOOP189:                          [[  L190      L191       ]]
 189 Loop    ____  190  419       [[   198  202  188  ]]  Ctrl
 198 Phi_i    189  398  199       [[   202  194  199  200  ]]  int
 202 cmp      189  198  204       [[   188       ]]  bool
 188 j>=      189  202            [[   187  193  ]]  [  Ctrl, Ctrl]

LOOP69:                           [[  L70       L71        ]]
  69 Loop    ____   70  425       [[    74   80   72   68  ]]  Ctrl
  74 Phi_k     69   75   76       [[    72   76   81   83  ]]  int
  80 Phi_$3    69   79   81       [[    78   81   83  ]]  #BOT
  72 cmp       69   74   77       [[    68       ]]  bool
  68 j>=       69   72            [[    67   71  ]]  [  Ctrl, Ctrl]

L7:                               [[  L9         ]]
   7 CallEnd    8                 [[     6  184  ]]  [  Ctrl, #BOT, 0]
 184 $mem       7                 [[     5       ]]  #BOT

L98:                              [[  L93        ]]
  98 False     92                 [[   339  394  105  107  104  345  330  335  348  393   97  ]]  Ctrl
 330 mov       98  328            [[    97       ]]
 335 mov       98  332            [[    97       ]]
 393 mov       98  391            [[    97       ]]
 348 mov       98  345            [[    97       ]]
  97 call      98   99  330  393  348  335  [[    96  ]]  Ctrl
 339 mov       98  336            [[   105       ]]
 394 mov       98  391            [[   105       ]]
 105 add       98  339  394       [[   104       ]]  int
 107 #2        98                 [[   104       ]]  2
 104 div       98  105  107       [[   345       ]]  int
 345 mov       98  104            [[   348  347  346  ]]

L56:                              [[  L58        ]]
  56 CallEnd   57                 [[    55   88  ]]  [  Ctrl, #BOT, 0]
  88 $mem      56                 [[    54       ]]  #BOT

L91:                              [[  L93        ]]
  91 True      92                 [[    90       ]]  Ctrl

L6:                               [[  L7         ]]
   6 $ctrl      7                 [[   356  372  409    5  ]]  Ctrl
 356 mov        6  355            [[     5       ]]
 372 mov        6  371            [[     5       ]]
 409 #10        6                 [[     5       ]]  10
   5 call       6  184  356  372  409  [[     4  ]]  Ctrl

L55:                              [[  L56        ]]
  55 $ctrl     56                 [[   350  354  401  404   54  ]]  Ctrl
 350 mov       55  349            [[    54       ]]
 354 #0        55                 [[    54       ]]  0
 404 mov       55  403            [[    54       ]]
 401 mov       55  400            [[    54       ]]
  54 call      55   88  401  354  404  350  [[    53  ]]  Ctrl

L118:                             [[  LOOP120    ]]
 118 True     119                 [[   172  414  415  117  ]]  Ctrl
 172 ALLMEM   118  151 ____  150  [[   117       ]]  #BOT
 414 mov      118  413            [[   117       ]]
 415 #0       118                 [[   117       ]]  0
 117 Return   118  172  415  173  414  219  220  221  222  223  224  225  226  227  228  229  230  231  232  233  234  235  [[     1  ]]  [  Ctrl, #BOT, 0]

L134:                             [[  LOOP120    ]]
 134 False    119                 [[   135  133  ]]  Ctrl
 135 cmp      134  137  141       [[   133       ]]  bool
 133 j<       134  135            [[   132  163  ]]  [  Ctrl, Ctrl]

L187:                             [[  LOOP189    ]]
 187 True     188                 [[   169  186  ]]  Ctrl
 169 #1       187                 [[   207       ]]  1

L193:                             [[  LOOP189    ]]
 193 False    188                 [[   200  194  192  ]]  Ctrl
 200 ld8      193  196  201  198  [[   194       ]]  int
 194 cmp8     193  196  197  198  200  [[   192  ]]  bool
 192 j!=      193  194            [[   191  205  ]]  [  Ctrl, Ctrl]

L67:                              [[  LOOP69     ]]
  67 True      68                 [[    78   62   66  ]]  Ctrl
  78 ALLMEM    67   79 ____   80  [[    66       ]]  #BOT
  62 #0        67                 [[    66       ]]  0
  66 Return    67   78   62   85  272  273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288  289  [[     1  ]]  [  Ctrl, #BOT, 0]

L71:                              [[  LOOP69     ]]
  71 False     68                 [[    83   81   76  425  ]]  Ctrl
  76 inc       71   74            [[    74       ]]  int
  83 ld8       71   80   84   74  [[    81       ]]  int
  81 st8       71   80   82   74   83  [[    80  ]]  #3:Bot

L96:                              [[  L98        ]]
  96 CallEnd   97                 [[    95  100  ]]  [  Ctrl, #BOT, 0]
 100 $mem      96                 [[    94       ]]  #BOT

L4:                               [[  L6         ]]
   4 CallEnd    5                 [[     3  210  211  ]]  [  Ctrl, #BOT, bool]
 210 $mem       4                 [[     2       ]]  #BOT
 211 #2         4                 [[     2       ]]  bool

L95:                              [[  L96        ]]
  95 $ctrl     96                 [[   331  334  340  347   94  ]]  Ctrl
 331 mov       95  328            [[    94       ]]
 334 mov       95  332            [[    94       ]]
 347 mov       95  345            [[    94       ]]
 340 mov       95  336            [[    94       ]]
  94 call      95  100  331  347  340  334  [[   115  ]]  Ctrl

L132:                             [[  L134       ]]
 132 True     133                 [[   142  131  ]]  Ctrl
 142 cmp      132  144  145       [[   131       ]]  bool
 131 j<=      132  142            [[   130  164  ]]  [  Ctrl, Ctrl]

L53:                              [[  L55        ]]
  53 CallEnd   54                 [[    52  181  ]]  [  Ctrl, #BOT, 0]
 181 $mem      53                 [[    51       ]]  #BOT

L163:                             [[  L134       ]]
 163 False    133                 [[   389  424  ]]  Ctrl
 389 #0       163                 [[   168       ]]  0
 424 jmp      163                 [[   127       ]]

L191:                             [[  L193       ]]
 191 False    192                 [[   199  419  ]]  Ctrl
 199 inc      191  198            [[   198       ]]  int

L205:                             [[  L193       ]]
 205 True     192                 [[   399  418  ]]  Ctrl
 399 #0       205                 [[   207       ]]  0
 418 jmp      205                 [[   186       ]]

L3:                               [[  L4         ]]
   3 $ctrl      4                 [[   417    2  ]]  Ctrl
 417 mov        3  416            [[     2       ]]
   2 Return     3  210  211  212  417  309  310  311  312  313  314  315  316  317  318  319  320  321  322  323  324  325  [[     1  ]]  [  Ctrl, #BOT, bool]

L186:                             [[  L187      L205       ]]
 186 Region  ____  187  418       [[   207  206  185  ]]  Ctrl
 207 Phi_res  186  169  399       [[   185       ]]  bool
 206 ALLMEM   186  196 ____  196  [[   185       ]]  #BOT
 185 Return   186  206  207  208  254  255  256  257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  [[     1  ]]  [  Ctrl, #BOT, bool]

L52:                              [[  L53        ]]
  52 $ctrl     53                 [[   352   51  ]]  Ctrl
 352 #0        52                 [[    51       ]]  0
  51 Return    52  181  352  182  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304  305  306  307  [[     1  ]]  [  Ctrl, #BOT, 0]

L115:                             [[  L95        ]]
 115 CallEnd   94                 [[   114  116  ]]  [  Ctrl, #BOT, 0]
 116 $mem     115                 [[   113       ]]  #BOT

L130:                             [[  L132       ]]
 130 False    131                 [[   327  162  148  129  ]]  Ctrl
 327 mov      130  326            [[   162       ]]
 162 ld8      130  150  327  145  [[   148       ]]  int
 148 cmp8     130  150  326  137  162  [[   129  ]]  bool
 129 j<=      130  148            [[   128  165  ]]  [  Ctrl, Ctrl]

L164:                             [[  L132       ]]
 164 True     131                 [[   388  127  ]]  Ctrl
 388 #1       164                 [[   168       ]]  1

L114:                             [[  L115       ]]
 114 $ctrl    115                 [[   329  333  337  346  392  113  ]]  Ctrl
 329 mov      114  328            [[   113       ]]
 333 mov      114  332            [[   113       ]]
 392 mov      114  391            [[   113       ]]
 346 mov      114  345            [[   113       ]]
 337 mov      114  336            [[   113       ]]
 113 call     114  116  333  392  346  337  329  [[   112  ]]  Ctrl

L128:                             [[  L130       ]]
 128 True     129                 [[   387  422  ]]  Ctrl
 387 #1       128                 [[   168       ]]  1
 422 jmp      128                 [[   127       ]]

L165:                             [[  L130       ]]
 165 False    129                 [[   390  423  ]]  Ctrl
 390 #0       165                 [[   168       ]]  0
 423 jmp      165                 [[   127       ]]

L112:                             [[  L114       ]]
 112 CallEnd  113                 [[   111  176  ]]  [  Ctrl, #BOT, 0]
 176 $mem     112                 [[   175       ]]  #BOT

L127:                             [[  L128      L163      L164      L165       ]]
 127 Region  ____  422  424  164  423  [[   168  166  126  ]]  Ctrl
 168 Phi_con  127  387  389  388  390  [[   166  ]]  bool
 166 test     127  168            [[   126       ]]
 126 j!=      127  166            [[   123  160  ]]  [  Ctrl, Ctrl]

L111:                             [[  L112       ]]
 111 $ctrl    112                 [[    90       ]]  Ctrl

L90:                              [[  L91       L111       ]]
  90 Region  ____   91  111       [[   175  215   89  ]]  Ctrl
 175 Phi_$me   90   99  176       [[    89       ]]  #BOT
 215 #0        90                 [[    89       ]]  0
  89 Return    90  175  215  177  236  237  238  239  240  241  242  243  244  245  246  247  248  249  250  251  252  253  [[     1  ]]  [  Ctrl, #BOT, 0]

L160:                             [[  L127       ]]
 160 False    126                 [[   161  159  147  421  ]]  Ctrl
 147 inc      160  145            [[   146       ]]  int
 161 ld8      160  150  326  145  [[   159       ]]  int
 421 jmp      160                 [[   122       ]]
 159 st8      160  150  154  155  161  [[   152  ]]  #3:Bot

L123:                             [[  L127       ]]
 123 True     126                 [[   157  153  140  122  ]]  Ctrl
 140 inc      123  137            [[   139       ]]  int
 157 ld8      123  150  326  137  [[   153       ]]  int
 153 st8      123  150  154  155  157  [[   152  ]]  #3:Bot

L122:                             [[  L123      L160       ]]
 122 Region  ____  123  421       [[   139  146  152  156  420  ]]  Ctrl
 139 Phi_i    122  140  137       [[   137       ]]  int
 146 Phi_j    122  145  147       [[   145       ]]  int
 152 Phi_$3   122  153  159       [[   150       ]]  #3:Bot
 156 inc      122  155            [[   155       ]]  int

L1:                               [[  L118      L67       L186       ]]
   1 Stop       2   51   89  117   66  185  [[   ]]  Bot



---split_merge { *![int] int int *![int] -> 0 #0}---------------------------
0000 4883EC38    subi  rsp -= #56
                 a:r9,b:rcx,begin:rdx,end:r8
0004 4889542428  mov   [rsp+40] = rdx                 // def/loop #1
0009 4C89442458  mov   [rsp+88] = r8                  // def/loop #0
000E 48894C2450  mov   [rsp+80] = rcx                 // def/loop #0
0013 4C894C2448  mov   [rsp+72] = r9                  // def/loop #0
0018 4C8B442458  mov   r8 = [rsp+88]                  // use/loop/use #0
001D 4C8B542428  mov   r10 = [rsp+40]                 // use/loop/use #1
0022 4D2BC2      sub   r8 -= r10
0025 4983F801    cmp   r8, #1
0029 7E6F        j<=   L90                            // L98
L98:
002B 488B442458  mov   rax = [rsp+88]                 // use/loop/use #0
0030 488B542428  mov   rdx = [rsp+40]                 // use/loop/use #1
0035 4803C2      add   rax += rdx
0038 B902000000  ldi   rcx = #2
003D 489948F7F9  div   rax = rax / rcx                // kill rdx
0042 4889442440  mov   [rsp+64] = rax                 // def/loop #0
0047 488B4C2448  mov   rcx = [rsp+72]                 // use/loop/use #0
004C 4C8B4C2450  mov   r9 = [rsp+80]                  // use/loop/use #0
0051 4C8B442440  mov   r8 = [rsp+64]                  // use/loop/use #0
0056 488B542428  mov   rdx = [rsp+40]                 // use/loop/use #1
005B E8A0FFFFFF  call  split_merge  rcx  rdx  r8  r9
0060 488B4C2448  mov   rcx = [rsp+72]                 // use/loop/use #0
0065 4C8B4C2450  mov   r9 = [rsp+80]                  // use/loop/use #0
006A 4C8B442458  mov   r8 = [rsp+88]                  // use/loop/use #0
006F 488B542440  mov   rdx = [rsp+64]                 // use/loop/use #0
0074 E887FFFFFF  call  split_merge  rcx  rdx  r8  r9
0079 FF7424488F  mov   [rsp+32] = [rsp+72]            // use/loop/use #0
007E 442420
0081 488B4C2450  mov   rcx = [rsp+80]                 // use/loop/use #0
0086 4C8B4C2458  mov   r9 = [rsp+88]                  // use/loop/use #0
008B 4C8B442440  mov   r8 = [rsp+64]                  // use/loop/use #0
0090 488B542428  mov   rdx = [rsp+40]                 // use/loop/use #1
0095 E836000000  call  merge  rcx  rdx  r8  r9  [stk#42]
L91:
L90:
009A 33C0        xor   rax,rax
009C 4883C438C3  addi  rsp += #56
00A1             ret
---{ *![int] int int *![int] -> 0 #0}---------------------------

---copy_array { *![int] int int *![int] -> 0 #1}---------------------------
                 begin:rdx,end:r8,b:r9,a:rcx
LOOP69:
                 k:rdx
00B0 493BD0      cmp   rdx, r8
00B3 7D10        j>=   L67                            // L71
L71:
00B5 488B44D108  ld8   rax,[rcx+rdx*8+8]
00BA 498944D108  st8   [r9+rdx*8+8],rax
00BF 4883C201    inc   rdx += #1
00C3 EBEB        jmp   LOOP69
L425:
L67:
00C5 33C0        xor   rax,rax
00C7 C3          ret
---{ *![int] int int *![int] -> 0 #1}---------------------------

---merge { *![int] int int int *![int] -> 0 #0}---------------------------
                 begin:rdx,middle:r8,end:r9,b:rcx,a:[rsp+40]
00D0 66480F6EC3  mov   xmm0 = rbx                     // def/loop #2
00D5 488B5C2428  mov   rbx = [rsp+40]                 // def/empty1 #0
00DA 4C8BDA      mov   r11 = rdx                      // use/self/phi #1
00DD 4D8BD0      mov   r10 = r8                       // use/self/use #1
LOOP120:
                 i:r11,j:r10,k:rdx
00E0 493BD1      cmp   rdx, r9
00E3 7D57        j>=   L118                           // L134
L134:
00E5 4D3BD8      cmp   r11, r8
00E8 7C04        j<    L132                           // L163
L163:
00EA 33C0        xor   rax,rax
00EC EB24        jmp   L127
L424:
L132:
00EE 4D3BCA      cmp   r9, r10
00F1 7E1A        j<=   L164                           // L130
L130:
00F3 488BC3      mov   rax = rbx                      // use/empty1 #0
00F6 4A8B44D008  ld8   rax,[rax+r10*8+8]
00FB 4A3944DB08  cmp8  rax, [rbx+r11*8+8]
0100 7E04        j<=   L128                           // L165
L165:
0102 33C0        xor   rax,rax
0104 EB0C        jmp   L127
L423:
L128:
0106 B801000000  ldi   rax = #1
010B EB05        jmp   L127
L422:
L164:
010D B801000000  ldi   rax = #1
L127:
                 cond:rax
0112 4883F800    test  rax
0116 7510        j!=   L123                           // L160
L160:
0118 4A8B44D308  ld8   rax,[rbx+r10*8+8]
011D 488944D108  st8   [rcx+rdx*8+8],rax
0122 4983C201    inc   r10 += #1
0126 EB0E        jmp   L122
L421:
L123:
0128 4A8B44DB08  ld8   rax,[rbx+r11*8+8]
012D 488944D108  st8   [rcx+rdx*8+8],rax
0132 4983C301    inc   r11 += #1
L122:
                 i:r11,j:r10
0136 4883C201    inc   rdx += #1
013A EBA4        jmp   LOOP120
L420:
L118:
013C 66480F7EC3  mov   rbx = xmm0                     // use/loop/use #2
0141 33C0        xor   rax,rax
0143 C3          ret
---{ *![int] int int int *![int] -> 0 #0}---------------------------

---eq { *![int] *![int] int -> bool #1}---------------------------
                 a:rcx,b:rdx,n:r8
0150 33C0        xor   rax,rax
LOOP189:
                 i:rax
0152 493BC0      cmp   rax, r8
0155 7D16        j>=   L187                           // L193
L193:
0157 4C8B4CC208  ld8   r9,[rdx+rax*8+8]
015C 4C394CC108  cmp8  r9, [rcx+rax*8+8]
0161 7506        j!=   L205                           // L191
L191:
0163 4883C001    inc   rax += #1
0167 EBE9        jmp   LOOP189
L419:
L205:
0169 33C0        xor   rax,rax
016B EB05        jmp   L186
L418:
L187:
016D B801000000  ldi   rax = #1
L186:
                 result:rax
0172 C3          ret
---{ *![int] *![int] int -> bool #1}---------------------------

---main { -> bool #0}---------------------------
0180 4883EC28    subi  rsp -= #40
0184 48895C2420  mov   [rsp+32] = rbx                 // def/loop #2
0189 BA58000000  ldi   rdx = #88
018E B901000000  alloc ldi   rcx = #1
0193 E800000000  call  #calloc
0198 4889442418  mov   [rsp+24] = rax                 // def/loop #0
019D 4C8B4C2418  mov   r9 = [rsp+24]                  // use/loop/use #0
01A2 49C741080A  st8   [r9+8],#10
01A7 000000
01AA 4C8B442418  mov   r8 = [rsp+24]                  // use/loop/use #0
01AF 49C7401009  st8   [r8+16],#9
01B4 000000
01B7 488B542418  mov   rdx = [rsp+24]                 // use/loop/use #0
01BC 48C7421808  st8   [rdx+24],#8
01C1 000000
01C4 488B4C2418  mov   rcx = [rsp+24]                 // use/loop/use #0
01C9 48C7412007  st8   [rcx+32],#7
01CE 000000
01D1 488B442418  mov   rax = [rsp+24]                 // use/loop/use #0
01D6 48C7402806  st8   [rax+40],#6
01DB 000000
01DE 4C8B5C2418  mov   r11 = [rsp+24]                 // use/loop/use #0
01E3 49C7433005  st8   [r11+48],#5
01E8 000000
01EB 4C8B542418  mov   r10 = [rsp+24]                 // use/loop/use #0
01F0 49C7423804  st8   [r10+56],#4
01F5 000000
01F8 4C8B4C2418  mov   r9 = [rsp+24]                  // use/loop/use #0
01FD 49C7414003  st8   [r9+64],#3
0202 000000
0205 4C8B442418  mov   r8 = [rsp+24]                  // use/loop/use #0
020A 49C7404802  st8   [r8+72],#2
020F 000000
0212 488B542418  mov   rdx = [rsp+24]                 // use/loop/use #0
0217 C7020A0000  st4   [rdx],#10
021C 00
021D 488B4C2418  mov   rcx = [rsp+24]                 // use/loop/use #0
0222 48C7415001  st8   [rcx+80],#1
0227 000000
022A BA58000000  ldi   rdx = #88
022F B901000000  alloc ldi   rcx = #1
0234 E800000000  call  #calloc
0239 4889442410  mov   [rsp+16] = rax                 // def/empty1 #1
023E C7000A0000  st4   [rax],#10
0243 00
0244 BA58000000  ldi   rdx = #88
0249 B901000000  alloc ldi   rcx = #1
024E E800000000  call  #calloc
0253 488BD8      mov   rbx = rax                      // def/empty1 #0
0256 48C7430801  st8   [rbx+8],#1
025B 000000
025E 48C7431002  st8   [rbx+16],#2
0263 000000
0266 48C7431803  st8   [rbx+24],#3
026B 000000
026E 48C7432004  st8   [rbx+32],#4
0273 000000
0276 48C7432805  st8   [rbx+40],#5
027B 000000
027E 48C7433006  st8   [rbx+48],#6
0283 000000
0286 48C7433807  st8   [rbx+56],#7
028B 000000
028E 48C7434008  st8   [rbx+64],#8
0293 000000
0296 48C7434809  st8   [rbx+72],#9
029B 000000
029E C7030A0000  st4   [rbx],#10
02A3 00
02A4 48C743500A  st8   [rbx+80],#10
02A9 000000
02AC 488B4C2418  mov   rcx = [rsp+24]                 // use/loop/use #0
02B1 488B542410  mov   rdx = [rsp+16]                 // use/empty1 #0
02B6 41B80A0000  ldi   r8 = #10
02BB 00
02BC E81F000000  call  merge_sort  rcx  rdx  r8
02C1 488B4C2418  mov   rcx = [rsp+24]                 // use/loop/use #0
02C6 488BD3      mov   rdx = rbx                      // use/empty1 #0
02C9 41B80A0000  ldi   r8 = #10
02CE 00
02CF E87CFEFFFF  call  eq  rcx  rdx  r8
02D4 488B5C2420  mov   rbx = [rsp+32]                 // use/loop/use #2
02D9 4883C428C3  addi  rsp += #40
02DE             ret
---{ -> bool #0}---------------------------

---merge_sort { *![int] *![int] int -> 0 #0}---------------------------
02E0 4883EC28    subi  rsp -= #40
                 a:rcx,n:r8,b:rdx
02E4 4C89442440  mov   [rsp+64] = r8                  // def/loop #1
02E9 48894C2438  mov   [rsp+56] = rcx                 // def/loop #1
02EE 4889542430  mov   [rsp+48] = rdx                 // def/loop #0
02F3 4C8B4C2430  mov   r9 = [rsp+48]                  // use/loop/use #0
02F8 33D2        xor   rdx,rdx
02FA 488B4C2438  mov   rcx = [rsp+56]                 // use/loop/use #1
02FF 4C8B442440  mov   r8 = [rsp+64]                  // use/loop/use #1
0304 E8A7FDFFFF  call  copy_array  rcx  rdx  r8  r9
0309 4C8B4C2430  mov   r9 = [rsp+48]                  // use/loop/use #0
030E 33D2        xor   rdx,rdx
0310 488B4C2438  mov   rcx = [rsp+56]                 // use/loop/use #1
0315 4C8B442440  mov   r8 = [rsp+64]                  // use/loop/use #1
031A E8E1FCFFFF  call  split_merge  rcx  rdx  r8  r9
031F 33C0        xor   rax,rax
0321 4883C428C3  addi  rsp += #40
0326             ret
---{ *![int] *![int] int -> 0 #0}---------------------------
