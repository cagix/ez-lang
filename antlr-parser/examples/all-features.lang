struct Tree {
    var left: Tree?
    var right: Tree?
}
struct Test {
    var intArray: [Int]
}
struct TreeArray {
    var array: [Tree?]?
}
func print(n: Int) {}
func foo(a: Int, b: [Int]) {
    while(1) {
        if (a > b.length)
            break
        print(b[a])
        a = a + 1
        a = a + 2
    }
}
func bar() -> Test {
    var v = new Test { intArray = new [Tree] { new Tree{left=null,right=null} } }
    return v
}
func main() {
    var m = 42
    var j: Int
    var t: Tree
    var array = new [Int] {size=10,1,2,3}
    array[1] = 42
    t.left = null
    if (m < 1)
       print(1)
    else if (m == 5)
       print(2)
    else
       print(3)
}
func fib(n: Int)->Int {
    var f1=1
    var f2=1
    var i=n
    while( i>1 ){
        var temp = f1+f2
        f1=f2
        f2=temp
        i=i-1
    }
    return f2
}
